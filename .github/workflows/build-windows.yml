name: Build Windows

on:
  workflow_dispatch:
  push:

jobs:
  build-v8:
    name: Build v8
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clone v8
        env:
          DEPOT_TOOLS_WIN_TOOLCHAIN: 0
        run: |
          python setup.py checkout_v8

      - name: Restore v8 from cache
        id: restore-v8
        uses: actions/cache/restore@v3
        with:
          path: v8\out.gn\x64.release.sample\obj\v8_monolith.lib
          key: ${{ runner.os }}-build-v8-${{ hashFiles('v8/src/**') }}

      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ steps.restore-v8.outputs.cache-hit != 'true' }}
        with:
          toolset: 14.2

      - name: Build v8
        if: ${{ steps.restore-v8.outputs.cache-hit != 'true' }}
        continue-on-error: false
        env:
          DEPOT_TOOLS_WIN_TOOLCHAIN: 0
        run: python setup.py v8

      - uses: actions/cache/save@v3
        if: always()
        with:
          path: v8\out.gn\x64.release.sample\obj\v8_monolith.lib
          key: ${{ runner.os }}-build-v8-${{ hashFiles('v8/src/**') }}

  build:
    name: Build wheel on ${{ matrix.os }}
    needs: build-v8
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        python-version: ['3.10']

    steps:
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2

      - name: STEP 1. Checkout repository
        uses: actions/checkout@v3

      - name: STEP 2. Set up Python
        id: install-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download Boost
        id: download-boost
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://boostorg.jfrog.io/artifactory/main/release/1.74.0/source/boost_1_74_0.zip

      - name: Install Boost
        id: install-boost
        run: |
          $BOOST_ROOT="D:\boost"
          $INSTALL_LOG="install.log"
          mkdir $BOOST_ROOT
          Expand-Archive ${{ steps.download-boost.outputs.filename }} -DestinationPath $BOOST_ROOT
          cd $BOOST_ROOT\*
          echo "BOOST_ROOT=$pwd" >> $env:GITHUB_OUTPUT
          echo "BOOST_ROOT=$pwd" >> $env:GITHUB_ENV
          echo "BOOST_LIBRARYDIR=$pwd\stage\lib" >> $env:GITHUB_ENV

      - name: STEP 4. Build Boost.Python
        working-directory: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: |
          .\bootstrap.bat
          if (-not $?) { type bootstrap.log }
          $escapedPythonPath = "${{ steps.install-python.outputs.python-path }}" -Replace "\\","\\"
          echo "using python : : ""$escapedPythonPath"" ;" >> project-config.jam
          (Get-Content libs\python\src\exec.cpp).replace('_Py_fopen', 'fopen') | Set-Content libs\python\src\exec.cpp
          .\b2.exe stage link=static runtime-link=static --with-python --debug-configuration
          ls stage\lib

      - name: Restore v8 from cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: v8\out.gn\x64.release.sample\obj\v8_monolith.lib
          key: ${{ runner.os }}-build-v8-${{ hashFiles('v8/src/**') }}

      - name: STEP 5. Build wheel
        run: |
          python -m pip freeze
          python -m pip show wheel
          python -m pip install -U setuptools
          python -m pip install wheel
          $env:LIB="$env:LIB;${{steps.download.outputs.download-path}};${{ steps.install-boost.outputs.BOOST_ROOT }}\stage\lib"
          python setup.py sdist bdist_wheel -d stpyv8-${{ matrix.os }}-${{ matrix.python-version }}
          python setup.py install
          cp v8/out.gn/x64.release.sample/icudtl.dat stpyv8-${{ matrix.os }}-${{ matrix.python-version }}/icudtl.dat

      - name: STEP 6. Test wheel
        run: |
          python -m pip install pytest
          pytest -v

      - name: STEP 7. Create wheel zip
        uses: vimtor/action-zip@v1.1
        with:
          files: stpyv8-${{ matrix.os }}-${{ matrix.python-version }}/
          recursive: false
          dest: stpyv8-${{ matrix.os }}-python-${{ matrix.python-version }}.zip

      # - name: STEP 7. Upload wheel zip
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: wheels
      #     path: stpyv8-${{ matrix.os }}-python-${{ matrix.python-version }}.zip
